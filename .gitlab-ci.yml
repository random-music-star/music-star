stages:
  - deploy
variables:
  SERVER_IP: j12a202.p.ssafy.io
  SSH_USER: ubuntu
  PROJECT_DIR: ~/S12P21A202/FE
  CONTAINER_NAME: nextjs-app
  IMAGE_NAME: nextjs-app
  PORT: 3000

deploy-frontend:
  stage: deploy
  only:
    - FE
  tags:
    - prod
  before_script:
    - echo "🔍 Current user: $(whoami)"
    - echo "🔍 Home directory: $HOME"
    - echo "🔍 SSH_PRIVATE_KEY length: ${#SSH_PRIVATE_KEY}"
    - echo "📦 Checking apt permissions"
    - sudo -v || true
    - echo "📦 Installing SSH client"
    - sudo apt-get update -q || true
    - sudo apt-get install -y openssh-client
    - echo "🔐 Setting up SSH key"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "🔍 Checking SSH_PRIVATE_KEY start"
    - echo "$SSH_PRIVATE_KEY" | head -c 50
    - echo "🔍 Checking SSH_PRIVATE_KEY end"
    - echo "$SSH_PRIVATE_KEY" | base64 -d > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ls -l ~/.ssh/id_rsa
    - cat ~/.ssh/id_rsa | head -c 50
    - echo "🔐 Starting SSH agent"
    - eval "$(ssh-agent -s)"
    - echo "🌐 Adding server to known hosts"
    - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
    - echo "🔑 Adding SSH key"
    - ssh-add -k ~/.ssh/id_rsa || ssh-add ~/.ssh/id_rsa
  script:
    - echo "🚀 Starting deployment to $SERVER_IP"
    - ssh -V
    - ssh-add -l
    - |
      ssh -vvv -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $SSH_USER@$SERVER_IP << EOF
        echo "📂 Moving to project directory: $PROJECT_DIR"
        cd $PROJECT_DIR || { echo '❌ Failed to move to project directory'; exit 1; }
        echo "🔄 Pulling latest changes from FE branch"
        git fetch origin FE
        git reset --hard origin/FE
        git clean -fd
        echo "🐳 Building Docker image: $IMAGE_NAME"
        docker build -t $IMAGE_NAME . || { echo '❌ Docker build failed'; exit 1; }
        echo "🛑 Stopping existing container: $CONTAINER_NAME"
        docker stop $CONTAINER_NAME || echo "⚠️ No container to stop"
        echo "🧹 Removing old container: $CONTAINER_NAME"
        docker rm $CONTAINER_NAME || echo "⚠️ No container to remove"
        echo "🚢 Running new container"
        docker run -d \
          -p $PORT:$PORT \
          --restart always \
          --name $CONTAINER_NAME $IMAGE_NAME || { echo '❌ Docker run failed'; exit 1; }
        echo "✅ Deployment finished successfully"
      EOF
